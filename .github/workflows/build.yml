name: build

on:
    push: { branches: [master, main, dev/*], tags: [v*] }
    pull_request:
    workflow_dispatch:

jobs:
    build:
        runs-on: ubuntu-latest
        permissions:
            contents: write
            packages: write
            id-token: write
            attestations: write

        # cancel already in-progress jobs or runs for the current workflow
        concurrency:
            group: ${{ github.workflow }}-${{ github.ref }}
            cancel-in-progress: true

        env:
            REGISTRY: ghcr.io
            IMAGE_NAME: ${{ github.repository }}

        steps:
            - name: Checkout
              uses: actions/checkout@v4
              with: { fetch-depth: 0 }

            - name: Log in to the Container registry
              uses: docker/login-action@v3
              with:
                  registry: ${{ env.REGISTRY }}
                  username: ${{ github.actor }}
                  password: ${{ secrets.GITHUB_TOKEN }}

            - name: Set up Go
              uses: actions/setup-go@v5
              with: { cache: true, check-latest: true, go-version-file: "go.mod" }

            - name: Run GoReleaser (snapshot)
              id: build-snapshot
              uses: goreleaser/goreleaser-action@v6
              if: ${{ !startsWith(github.ref, 'refs/tags/') }}
              with:
                  version: "~> v2"
                  args: build --clean --snapshot
              env:
                  REGISTRY: ${{ env.REGISTRY }}
                  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

            - name: Run GoReleaser (release)
              uses: goreleaser/goreleaser-action@v6
              if: startsWith(github.ref, 'refs/tags/')
              with:
                  version: "~> v2"
                  args: release --clean
              env:
                  REGISTRY: ${{ env.REGISTRY }}
                  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

            - name: Attest Binary
              uses: actions/attest-build-provenance@v1
              with:
                  subject-path: "${{ github.workspace }}/dist/automoli-go_*/automoli-go_*"

            - name: Attest Image
              uses: actions/attest-build-provenance@v1
              id: attest
              with:
                  subject-name: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
                  subject-digest: ${{ steps.build-snapshot.outputs.metadata.digest }}
                  push-to-registry: true
